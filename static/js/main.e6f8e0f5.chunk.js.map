{"version":3,"sources":["App.js","customStyle.js","images/logo.png","topBar.js","sideBar.js","CustomJsonGraph.js","index.js","../node_modules/typescript/lib sync"],"names":["Array","keys","map","i","id","filter","source","target","Math","round","random","styles","width","position","right","height","color","border","marginTop","padding","zIndex","fontSize","listStyleType","paddingLeft","leftbar","background","borderRadius","cursor","textAlign","indexs","left","topBar","style","display","marginLeft","sideBar","props","toggleSidebar","event","key","currentTarget","parentNode","setState","state","console","log","rightOpen","workflow_type","type","name","node","Name","status","Status","neighbors","Workflow","Buyer","Seller","workflow_Implementation","WorkflowImplementation","this","data","hasOwnProperty","className","sidebar","layout","onClick","closeIcon","class","workflowList","RenderData","React","Component","CustomJsonGraph","fgRef","useRef","useState","setStatus","show_sidebar","showSidebar","setWorkflow_type","singleNodeData","setsingleNodeData","check","setCheck","Set","highlightNodes","setHighlightNodes","highlightLinks","setHighlightLinks","hoverNode","setHoverNode","linksGlobal","setLinksGlobal","nodesGlobal","setNodesGlobal","first_filter","setFirstFilter","selected","setSelected","selected1","setSelected1","selected2","setSelected2","selected3","setSelected3","Links_State","links","nodes","useEffect","useMemo","w_new","push","obj","length","j","k","updateHighlight","handleClick","flag","links_new","distRatio","hypot","x","current","cameraPosition","y","z","filter_graph","handleByStatus","node_status","new_nodes","filter_graph_by_status","paintRing","useCallback","ctx","beginPath","arc","NODE_R","PI","fillStyle","fill","mainDiv","heading","slctDiv","slct","value","onChange","e","parseInt","btn","middlebar","ref","graphData","nodeAutoColorBy","d","linkOpacity","linkAutoColorBy","linkWidth","autoPauseRedraw","linkDirectionalParticles","linkDirectionalParticleWidth","link","has","nodeLabel","n","nodeCanvasObject","nodeCanvasObjectMode","undefined","onNodeHover","clear","add","forEach","neighbor","onLinkHover","nodeVal","linkDirectionalArrowLength","linkDirectionalParticleSpeed","linkDirectionalParticleColor","onNodeClick","top","rootElement","document","getElementById","ReactDOM","render","webpackEmptyContext","req","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.e6f8e0f5.chunk.js","sourcesContent":["import \"./styles.css\";\n\nimport ForceGraph3d from \"react-force-graph-3d\";\n\n\n// Random data\nconst N = 70;\nconst gData = {\n  nodes: [...Array(N).keys()].map((i) => ({ id:i })),\n  links: [...Array(N).keys()]\n    .filter((id) => id)\n    .map((id) => ({\n      source: id,\n      target: Math.round(Math.random() * (id - 1))\n    }))\n};\n\n\n\nexport default function App() {\n  return (\n\n    <ForceGraph3d\n    backgroundColor={\"rgba(0,0,0,1)\"}\n    nodeColor={() => \"yellow\"}\n    linkColor={() => \"white\"}\n    graphData={gData}\n  />\n  \n  \n    \n  );\n\n \n}\n","export const styles = {\r\n    \"sidebar\": {\r\n        width: \"20%\",\r\n        position: \"absolute\",\r\n        right: \"33px\",\r\n        height: \"auto\",\r\n        color: \"white\",\r\n        border: \"1px solid\",\r\n        marginTop: \"180px\",\r\n        padding: \"18px\"\r\n    },\r\n    \"layout\": {\r\n        height: \"100%\", \r\n        zIndex: \"1\", \r\n        fontSize: \"22px\"\r\n    },\r\n    \"closeIcon\":{\r\n        fontSize: \"large\",\r\n        position: \"absolute\",\r\n        right: \"0\",\r\n        right: \"-10px\",\r\n        top: \"10px\"\r\n    },\r\n    \"workflowList\":{\r\n        listStyleType: \"none\",\r\n        paddingLeft: \"0px\"\r\n    }\r\n}\r\n\r\nexport const leftbar = {\r\n    \"btn\": {\r\n     background: \"transparent\",\r\n    color: \"white\",\r\n    border: \"1px solid white\",\r\n    borderRadius: \"4px\",\r\n    padding: \"8px\",\r\n    width: \"100%\",\r\n    cursor: \"pointer\"\r\n    },\r\n    \"slct\": {\r\n        zIndex: \"1\",\r\n        height: \"40px\",\r\n    },\r\n    \"mainDiv\": {\r\n        marginTop: \"180px\",textAlign:\"center\", border: \"1px solid white\" \r\n    },\r\n    \"heading\": {\r\n        color:\"white\"\r\n    },\r\n    \"slctDiv\": {\r\n        width:\"300px\", padding:\"20px\"\r\n    }\r\n}\r\n\r\nexport const topbar = {\r\n    \"mainD\": {\r\n        display:\"flex\", marginLeft:\"34%\",marginTop: \"30px\", padding: \"10px 0px\", position: \"absolute\",\r\n       color: \"white\",\r\n       zIndex: \"1\"\r\n    },\r\n    \"workflow\": {\r\n        padding:\"8px 20px\", border:\"1px solid\", marginLeft:\"10px\", color:\"black\", background:\"white\"\r\n    }\r\n}\r\n\r\nexport const indexs = {\r\n    \"leftbar\": {\r\n        position: \"absolute\", zIndex: \"1\", left: \"30px\" \r\n    },\r\n    \"middlebar\": {\r\n        position: \"absolute\" \r\n    }\r\n}\r\n//export styles;","export default __webpack_public_path__ + \"static/media/logo.2d2eac45.png\";","import \"./styles.css\";\r\n\r\nexport default function topBar() {\r\n    return(\r\n       <div style={{display:\"flex\", marginLeft:\"34%\",marginTop: \"30px\", padding: \"10px 0px\", position: \"absolute\",\r\n       color: \"white\",\r\n       zIndex: \"1\"}}>\r\n           <div style={{padding:\"8px 20px\", border:\"1px solid\", marginLeft:\"10px\", color:\"black\", background:\"white\"}}>Workflow View</div>\r\n           <div style={{padding:\"8px 20px\", border:\"1px solid\", marginLeft:\"10px\"}}>Partner Type View</div>\r\n           <div style={{padding:\"8px 20px\", border:\"1px solid\", marginLeft:\"10px\"}}>Supply Chain View</div>\r\n       </div>\r\n    )\r\n}","import React from 'react';\r\nimport './styles.css';\r\nimport {styles} from \"./customStyle\";\r\n//import \"./sideBar.scss\";\r\n\r\nclass sideBar extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"node data\",props);\r\n        this.state = {\r\n            rightOpen: true,\r\n            workflow_type: props.type,\r\n            name: props.node.Name,\r\n            status: props.node.Status,\r\n            neighbors: props.node.neighbors,\r\n            type: props.node.Workflow,\r\n            Buyer: props.node.Buyer,\r\n            Seller: props.node.Seller,\r\n            workflow_Implementation: props.node.WorkflowImplementation\r\n        }\r\n    }\r\n    // componentDidMount(){\r\n    //     console.log(this.state.seller);\r\n    //     this.state.seller && this.state.seller.map((data) =>\r\n    //         data.hasOwnProperty(\"Seller\") && console.log(data.Seller)\r\n    //     ) \r\n    // }\r\n    toggleSidebar = (event) => {\r\n        let key = `${event.currentTarget.parentNode.id}Open`;\r\n        this.setState({ [key]: !this.state[key] });\r\n    }\r\n\r\n    \r\n    RenderData()\r\n    {\r\n      if(this.state.workflow_type===\"workflow\")\r\n{\r\n   return  <div><li> <b>Name</b> -{this.state.name} \r\n    </li>\r\n   <li> <b>Type</b> - {this.state.type} </li>\r\n   <li> <b>Status</b> - {this.state.status} </li>\r\n   <li> <b>Seller Partner(s)</b> - { this.state.neighbors && this.state.neighbors.map((data) =>\r\n               data.hasOwnProperty(\"Seller\") && data.Seller\r\n           ) }</li>\r\n   <li> <b>Buyer Partner(s)</b> -  { this.state.neighbors && this.state.neighbors.map((data) =>\r\n               data.hasOwnProperty(\"Buyer\") && data.Buyer \r\n           ) } </li></div> \r\n\r\n\r\n}\r\n        if(this.state.workflow_type===\"InsuranceGig\"){\r\n            return <>\r\n      <li> Name -InsuranceGig </li>\r\n        Workflows -{ this.state.neighbors && this.state.neighbors.map((data) =>\r\n                      <li style={{fontSize:\"20px\"}}>-{data.Name}</li>  \r\n                    ) }\r\n            \r\n            </>\r\n\r\n        }\r\n                                        \r\n            \r\n        if(this.state.workflow_type===\"buyer_seller\"){\r\n\r\n        }\r\n           return  <div><li> <b>Name</b> -{ this.state.Buyer ? this.state.Buyer : this.state.Seller\r\n            } </li>\r\n             <li> <b>Workflows that they are a part of-</b> { this.state.workflow_Implementation && this.state.workflow_Implementation.map((data) =>\r\n                      <li> - {data.Name} </li>\r\n                    ) }</li>\r\n            <li> <b>Line Of Business</b> - None </li>\r\n            <li> <b>Insurance Value Chain</b> - None </li>\r\n            <li> <b>Insurance Business Type</b> - None</li>\r\n            <li> <b>Technology</b> - None</li>\r\n           \r\n            <li><b>Partners that they integrate with</b>- None</li>\r\n            </div>\r\n            \r\n            \r\n\r\n    }\r\n    render() {\r\n        let rightOpen = this.state.rightOpen ? 'true' : 'false';\r\n\r\n        return (\r\n            <>\r\n                {rightOpen ? <div className={`sidebaar ${rightOpen}`} style={styles.sidebar}>\r\n                    <div id='layout' style={ styles.layout }>\r\n                        <div id='right' className={rightOpen} >\r\n                            <div className='icon'\r\n                                onClick={this.toggleSidebar} style={ styles.closeIcon }>\r\n                                <span class=\"close\">&#10006;</span>\r\n                            </div>\r\n                            <div>\r\n                                <div className='content'>\r\n                                    <ul style={ styles.workflowList }>\r\n                                        <>\r\n\r\n                                        {\r\n                                            this.RenderData()\r\n                                        }\r\n                                       \r\n                                        </>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div></div> : ''}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default sideBar;","import \"./styles.css\";\r\nimport w_new from \"./WorkflowNew_1.json\";\r\nimport ForceGraph3D from \"react-force-graph-3d\";\r\nimport { Bezier } from \"bezier-js\";\r\nimport ForceGraph2D from \"react-force-graph-2d\";\r\nimport SpriteText from \"three-spritetext\";\r\nimport generateName from \"./random.js\";\r\nimport * as d3 from \"d3\";\r\nimport logo from \"./images/logo.png\";\r\nimport { indexs } from \"./customStyle\";\r\nimport LeftBar from \"./leftBar\";\r\nimport TopBar from \"./topBar\";\r\nimport SideBar from \"./sideBar\";\r\nimport { leftbar } from \"./customStyle\";\r\nimport {\r\n  CSS2DRenderer,\r\n  CSS2DObject,\r\n} from \"three/examples/jsm/renderers/CSS2DRenderer.js\";\r\nimport { useEffect, useState, useRef, useCallback, useMemo } from \"react\";\r\nimport { resolveModuleName } from \"typescript\";\r\nimport { filter } from \"d3\";\r\n\r\nfunction genRandomTree(N = 300, reverse = false) {\r\n  return {\r\n    nodes: [...Array(N).keys()].map((i) => ({ id: i })),\r\n    links: [...Array(N).keys()]\r\n      .filter((id) => id)\r\n      .map((id) => ({\r\n        [reverse ? \"target\" : \"source\"]: id,\r\n        [reverse ? \"source\" : \"target\"]: Math.round(Math.random() * (id - 1)),\r\n      })),\r\n  };\r\n}\r\n\r\nconst NODE_R = 5;\r\n\r\nexport default function CustomJsonGraph() {\r\n  const fgRef = useRef(null);\r\n\r\n  const [status, setStatus] = useState(false);\r\n  const [show_sidebar, showSidebar] = useState(false); //sidebar state\r\n  const [workflow_type, setWorkflow_type] = useState(\"\"); //type of state\r\n  const [singleNodeData, setsingleNodeData] = useState(null); //single node data for sidebar component\r\n\r\n  const [check, setCheck] = useState(false);\r\n  const [highlightNodes, setHighlightNodes] = useState(new Set());\r\n  const [highlightLinks, setHighlightLinks] = useState(new Set());\r\n  const [hoverNode, setHoverNode] = useState(null);\r\n  const [linksGlobal, setLinksGlobal] = useState(null);\r\n  const [nodesGlobal, setNodesGlobal] = useState(null);\r\n  const [first_filter, setFirstFilter] = useState(\"\");\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [selected1, setSelected1] = useState(\"\");\r\n  const [selected2, setSelected2] = useState(\"\");\r\n  const [selected3, setSelected3] = useState(\"\");\r\n\r\n  const Links_State = (links, nodes) => {\r\n    setLinksGlobal(links);\r\n    setNodesGlobal(nodes);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (linksGlobal !== null && nodesGlobal !== null) {\r\n      console.log(\"UseEffect called\");\r\n      console.log(linksGlobal);\r\n      //  filter_graph();\r\n    }\r\n  }, [linksGlobal, nodesGlobal]);\r\n\r\n  const filter_graph = (node) => {\r\n    //data.nodes=nodesGlobal;\r\n    if (first_filter !== \"Workflow\") {\r\n      console.log(\"Filter from Filtered\");\r\n      let flag = 0;\r\n      console.log(\"____________Second filter\");\r\n      console.log(data);\r\n      for (let i = 0; i < data.nodes.length; i++) {\r\n        if (node.id === data.nodes[i].id) {\r\n          flag++;\r\n          console.log(\"Found_______\");\r\n          data.nodes = [];\r\n          data.nodes.push(node);\r\n          data.nodes.push(...node.neighbors);\r\n          console.log(data.nodes);\r\n        } else {\r\n          console.log(\"Not Found_______\");\r\n        }\r\n      }\r\n      if (flag === 0) {\r\n        data.nodes = [];\r\n      }\r\n    } else {\r\n      for (let i = 0; i < nodesGlobal.length; i++) {\r\n        if (node.id === nodesGlobal[i].id) {\r\n          data.nodes = [];\r\n          data.nodes.push(node);\r\n          data.nodes.push(...node.neighbors);\r\n        }\r\n      }\r\n    }\r\n\r\n    //   data.links = linksGlobal;\r\n    let links_new = [];\r\n    // FOR CREATING LINK____________________\r\n//data.links = linksGlobal;\r\n    if (first_filter !== \"Workflow\") {\r\n      //data.links = [];\r\n      // data.links.push(linksGlobal);\r\n    }\r\n    for (let i = 0; i < data.links.length; i++) {\r\n      if (node.id === data.links[i].target.id) {\r\n        console.log(data.links[i]);\r\n        links_new.push(data.links[i]);\r\n      }\r\n      if (node.id === data.links[i].source.id) {\r\n        console.log(data.links[i]);\r\n        links_new.push(data.links[i]);\r\n      }\r\n    }\r\n\r\n    data.links = [];\r\n    data.links.push(...links_new);\r\n\r\n    //  console.log(\"new data=>\", data);\r\n\r\n    // setGData(data || null);\r\n    setHoverNode(node || null);\r\n    const distance = 40;\r\n    const distRatio = 5 + distance / Math.hypot(node.x);\r\n\r\n    fgRef.current.cameraPosition(\r\n      { x: node.x * distRatio, y: node.y * distRatio, z: node.z * distRatio }, // new position\r\n      node, // lookAt ({ x, y, z })\r\n      2000 // ms transition duration\r\n    );\r\n  };\r\n\r\n  const filter_graph_by_status = (node_status) => {\r\n    //data.nodes=nodesGlobal;\r\n    console.log(\"handleStatus\");\r\n    console.log(first_filter);\r\n    if (first_filter === \"Status\") {\r\n      console.log(\"Filter from Global\");\r\n      data.nodes = [];\r\n      for (let i = 0; i < nodesGlobal.length; i++) {\r\n        if (\r\n          nodesGlobal[i].hasOwnProperty(\"Name\") &&\r\n          nodesGlobal[i].Name !== \"InsuranceGig\"\r\n        ) {\r\n          if (node_status === nodesGlobal[i].Status) {\r\n            data.nodes.push(nodesGlobal[i]);\r\n            data.nodes.push(...nodesGlobal[i].neighbors);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      let new_nodes = [];\r\n      let flag = 0;\r\n      for (let i = 0; i < data.nodes.length; i++) {\r\n        if (\r\n          data.nodes[i].hasOwnProperty(\"Name\") &&\r\n          data.nodes[i].Name !== \"InsuranceGig\"\r\n        ) {\r\n          if (node_status === data.nodes[i].Status) {\r\n            flag++;\r\n            new_nodes.push(data.nodes[i]);\r\n            new_nodes.push(...data.nodes[i].neighbors);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (flag === 0) {\r\n        data.nodes = [];\r\n      } else {\r\n        data.nodes = [];\r\n        data.nodes.push(...new_nodes);\r\n      }\r\n    }\r\n\r\n    data.links = linksGlobal;\r\n    let links_new = [];\r\n    // FOR CREATING LINK____________________\r\n    for (let i = 0; i < data.nodes.length; i++) {\r\n      for (let j = 0; j < data.links.length; j++) {\r\n        if (data.nodes[i].id === data.links[j].source.id) {\r\n          console.log(data.links[j]);\r\n          links_new.push(data.links[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    data.links = [];\r\n    data.links.push(...links_new);\r\n\r\n    console.log(\"new data=>\", data);\r\n\r\n    // setGData(data || null);\r\n    setHoverNode(data.nodes || null);\r\n    // const distance = 40;\r\n    // const distRatio = 5 + distance / Math.hypot(data.nodes[0].x);\r\n\r\n    // fgRef.current.cameraPosition(\r\n    //   { x: data.nodes[0].x * distRatio, y: data.nodes[0].y * distRatio, z: data.nodes[0].z * distRatio }, // new position\r\n    //   data.nodes[0], // lookAt ({ x, y, z })\r\n    //   2000 // ms transition duration\r\n    // );\r\n  };\r\n\r\n  const data = useMemo(() => {\r\n    let nodes = [],\r\n      links = [];\r\n\r\n    if (w_new) {\r\n      console.log(w_new);\r\n      nodes.push(...w_new.nodes);\r\n\r\n      nodes = nodes.map((obj, i) => ({\r\n        ...obj,\r\n        id: i,\r\n        neighbors: [],\r\n        links: [],\r\n      }));\r\n\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        //For Center Node\r\n        if (nodes[i].hasOwnProperty(\"Name\") === true) {\r\n          if (nodes[i].Name === \"InsuranceGig\") {\r\n            for (let j = 1; j < w_new.nodes.length; j++) {\r\n              if (\r\n                nodes[j].hasOwnProperty(\"Name\") &&\r\n                nodes[j].Name !== \"InsuranceGig\"\r\n              ) {\r\n                nodes[i].neighbors.push(nodes[j]);\r\n                nodes[j].neighbors.push(nodes[i]);\r\n                let obj = {\r\n                  source: nodes[j].id,\r\n                  target: nodes[i].id,\r\n                };\r\n                // console.log(obj);\r\n                nodes[i].links.push(obj);\r\n                links.push(obj);\r\n              }\r\n            }\r\n          } else {\r\n            for (let j = 0; j < nodes.length; j++) {\r\n              if (\r\n                nodes[j].hasOwnProperty(\"Buyer\") ||\r\n                nodes[j].hasOwnProperty(\"Seller\")\r\n              ) {\r\n                for (\r\n                  let k = 0;\r\n                  k < nodes[j].WorkflowImplementation.length;\r\n                  k++\r\n                ) {\r\n                  if (\r\n                    nodes[i].Name === nodes[j].WorkflowImplementation[k].Name\r\n                  ) {\r\n                    nodes[i].neighbors.push(nodes[j]);\r\n                    nodes[j].neighbors.push(nodes[i]);\r\n                    let obj = {\r\n                      source: nodes[j].id,\r\n                      target: nodes[i].id,\r\n                    };\r\n                    // console.log(obj);\r\n                    nodes[i].links.push(obj);\r\n                    links.push(obj);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      setStatus(false);\r\n      setLinksGlobal(links);\r\n      setNodesGlobal(nodes);\r\n      console.log(nodes);\r\n      console.log(links);\r\n\r\n      //const data = { nodes: nodes, links: links };\r\n\r\n      return { nodes: nodes, links: links };\r\n    }\r\n  }, [check]);\r\n\r\n  const updateHighlight = () => {\r\n    setHighlightNodes(highlightNodes);\r\n    setHighlightLinks(highlightLinks);\r\n  };\r\n\r\n  const handleNodeHover = (node) => {\r\n    highlightNodes.clear();\r\n    highlightLinks.clear();\r\n    if (node) {\r\n      highlightNodes.add(node);\r\n      node.neighbors.forEach((neighbor) => highlightNodes.add(neighbor));\r\n      node.links.forEach((link) => highlightLinks.add(link));\r\n    }\r\n\r\n    setHoverNode(node || null);\r\n    updateHighlight();\r\n  };\r\n\r\n  const handleNodeClick = (node) => {\r\n    showSidebar(false);\r\n    setsingleNodeData(node);\r\n    if(node.hasOwnProperty(\"Name\")){\r\n      if(node.Name === \"InsuranceGig\"){\r\n        setWorkflow_type(\"InsuranceGig\");\r\n      }else{\r\n        setWorkflow_type(\"workflow\")\r\n      }\r\n    }else{\r\n      setWorkflow_type(\"buyer_seller\");\r\n    }\r\n  \r\n    showSidebar(true);\r\n\r\n    console.log(\"jsngrpah\", node);\r\n\r\n    const distance = 40;\r\n    const distRatio = 5 + distance / Math.hypot(node.x);\r\n\r\n    fgRef.current.cameraPosition(\r\n      { x: node.x * distRatio, y: node.y * distRatio, z: node.z * distRatio }, // new position\r\n      node, // lookAt ({ x, y, z })\r\n      2000 // ms transition duration\r\n    );\r\n  };\r\n  const handleClick = (node) => {\r\n    setCheck((check) => check);\r\n    setFirstFilter(\"Workflow\");\r\n\r\n    setCheck((check) => check);\r\n    console.log({ workflow_type });\r\n\r\n    if (linksGlobal === null || nodesGlobal === null) {\r\n      Links_State(data.links, data.nodes);\r\n    }\r\n\r\n    if (linksGlobal !== null && nodesGlobal !== null) {\r\n      filter_graph(node);\r\n    }\r\n  };\r\n\r\n  const handleByStatus = (status) => {\r\n    setFirstFilter(\"Status\");\r\n    setCheck((check) => check);\r\n\r\n    if (linksGlobal === null || nodesGlobal === null) {\r\n      Links_State(data.links, data.nodes);\r\n    }\r\n\r\n    if (linksGlobal !== null && nodesGlobal !== null) {\r\n      filter_graph_by_status(status);\r\n    }\r\n  };\r\n\r\n  const handleLinkHover = (link) => {\r\n    highlightNodes.clear();\r\n    highlightLinks.clear();\r\n\r\n    if (link) {\r\n      highlightLinks.add(link);\r\n      highlightNodes.add(link.source);\r\n      highlightNodes.add(link.target);\r\n    }\r\n\r\n    updateHighlight();\r\n  };\r\n\r\n  const paintRing = useCallback(\r\n    (node, ctx) => {\r\n      // add ring just for highlighted nodes\r\n      ctx.beginPath();\r\n      ctx.arc(node.x, node.y, NODE_R * 1.4, 0, 2 * Math.PI, false);\r\n      ctx.fillStyle = node === hoverNode ? \"red\" : \"red\";\r\n      ctx.fill();\r\n    },\r\n    [hoverNode]\r\n  );\r\n\r\n  const GROUPS = 12;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"rowWrapper\">\r\n        <div className=\"leftbar\" style={indexs.leftbar}>\r\n          <div style={leftbar.mainDiv}>\r\n            <h2 style={leftbar.heading}>Workflow</h2>\r\n            <div style={leftbar.slctDiv}>\r\n              <select\r\n                style={leftbar.slct}\r\n                value={selected}\r\n                onChange={(e) => setSelected(e.target.value)}\r\n                onClick={(e) => {\r\n                  if (parseInt(e.target.value) === parseInt(100)) {\r\n                    setCheck((check) => !check);\r\n                    // window.location.reload(false);\r\n                  } else {\r\n                    if (nodesGlobal !== null) {\r\n                      for (let i = 0; i < nodesGlobal.length; i++) {\r\n                        if (\r\n                          parseInt(e.target.value) ===\r\n                          parseInt(nodesGlobal[i].id)\r\n                        ) {\r\n                          console.log(\"data to be set==>\", data);\r\n\r\n                          handleClick(nodesGlobal[i]);\r\n                        }\r\n                      }\r\n                    } else {\r\n                      for (let i = 0; i < data.nodes.length; i++) {\r\n                        if (\r\n                          parseInt(e.target.value) ===\r\n                          parseInt(data.nodes[i].id)\r\n                        ) {\r\n                          console.log(\"data to be set==>\", data);\r\n\r\n                          handleClick(data.nodes[i]);\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <option>Choose a Workflow</option>\r\n                <option value=\"100\">RESET</option>\r\n                {nodesGlobal !== null\r\n                  ? nodesGlobal.map((data) =>\r\n                      data.hasOwnProperty(\"Workflow\") ? (\r\n                        <>\r\n                          <option key={data.id} value={data.id}>\r\n                            {data.Name}\r\n                          </option>\r\n                        </>\r\n                      ) : (\r\n                        <></>\r\n                      )\r\n                    )\r\n                  : data.nodes.map((data) =>\r\n                      data.hasOwnProperty(\"Workflow\") ? (\r\n                        <>\r\n                          <option key={data.id} value={data.id}>\r\n                            {data.Name}\r\n                          </option>\r\n                        </>\r\n                      ) : (\r\n                        <></>\r\n                      )\r\n                    )}\r\n              </select>\r\n              <br />\r\n              <br />\r\n\r\n              <select\r\n                value={selected3}\r\n                onChange={(e) => setSelected3(e.target.value)}\r\n                style={leftbar.slct}\r\n                onClick={(e) => {\r\n                  if (parseInt(e.target.value) === parseInt(100)) {\r\n                    setCheck((check) => !check);\r\n                    // window.location.reload(false);\r\n                  } else{\r\n                    if (nodesGlobal !== null) {\r\n                      for (let i = 0; i < nodesGlobal.length; i++) {\r\n                        if (\r\n                          parseInt(e.target.value) ===\r\n                          parseInt(nodesGlobal[i].id)\r\n                        ) {\r\n                          console.log(\"data to be set==>\", data);\r\n\r\n                          handleClick(nodesGlobal[i]);\r\n                        }\r\n                      }\r\n                    } else {\r\n                      for (let i = 0; i < data.nodes.length; i++) {\r\n                        if (\r\n                          parseInt(e.target.value) ===\r\n                          parseInt(data.nodes[i].id)\r\n                        ) {\r\n                          console.log(\"data to be set==>\", data);\r\n\r\n                          handleClick(data.nodes[i]);\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                    \r\n                }}\r\n              >\r\n                <option>Choose Buyer</option>\r\n                <option value=\"100\">RESET</option>\r\n                {nodesGlobal && nodesGlobal.map((data) =>\r\n                  data.hasOwnProperty(\"Buyer\") ? (\r\n                    <>\r\n                      <option key={data.id} value={data.id}>\r\n                        {data.Buyer}\r\n                      </option>\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                )}\r\n              </select>\r\n              <br />\r\n              <br />\r\n\r\n              <select\r\n               value={selected2}\r\n               onChange={(e) => setSelected2(e.target.value)}\r\n                style={leftbar.slct}\r\n                onClick={(e) => {\r\n                  if (parseInt(e.target.value) === parseInt(100)) {\r\n                    setCheck((check) => !check);\r\n                    //window.location.reload(false);\r\n                  } else\r\n                    for (let i = 0; i < data.nodes.length; i++) {\r\n                      if (\r\n                        parseInt(e.target.value) === parseInt(data.nodes[i].id)\r\n                      ) {\r\n                       \r\n\r\n                        handleClick(data.nodes[i]);\r\n                      }\r\n                    }\r\n                }}\r\n              >\r\n                <option>Choose Seller</option>\r\n                <option value=\"100\">RESET</option>\r\n                {nodesGlobal && nodesGlobal.map((data) =>\r\n                  data.hasOwnProperty(\"Seller\") ? (\r\n                    <>\r\n                      <option key={data.id} value={data.id}>\r\n                        {data.Seller}\r\n                      </option>\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                )}\r\n              </select>\r\n              <br />\r\n              <br />\r\n              <select\r\n                style={leftbar.slct}\r\n                value={selected1}\r\n                onChange={(e) => setSelected1(e.target.value)}\r\n                onClick={(e) => {\r\n                  console.log(e.target.value);\r\n                  if (parseInt(e.target.value) === parseInt(100)) {\r\n                    setCheck((check) => !check);\r\n                    // window.location.reload(false);\r\n                  } else if (e.target.value === \"Choose Status\") {\r\n                    return;\r\n                  } else {\r\n                    handleByStatus(e.target.value);\r\n                  }\r\n                }}\r\n              >\r\n                <option value={null}>Choose Status</option>\r\n                <option value=\"100\" key=\"100\">\r\n                  RESET\r\n                </option>\r\n                <option value=\"Live\" key=\"Live\">\r\n                  Live\r\n                </option>\r\n                <option value=\"Introduced\" key=\"Introduced\">\r\n                  Introduced\r\n                </option>\r\n                <option value=\"Testing\" key=\"Testing\">\r\n                  Testing\r\n                </option>\r\n              </select>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <button\r\n                style={leftbar.btn}\r\n                onClick={() => {\r\n                  setCheck((check) => !check);\r\n                  setSelected(\"\");\r\n                  setSelected1(\"\");\r\n                  setSelected2(\"\");\r\n                  setSelected3(\"\");\r\n                }}\r\n              >\r\n                Reset\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"middlebar\" style={indexs.middlebar}>\r\n          <TopBar />\r\n   <ForceGraph3D\r\n  className=\"react-graph\"\r\n  //nodeColor={node => node.id%2===0 ?\"red\" : \"yellow\"}\r\n  // nodeColor={(node) => generateName(node)}\r\n  ref={fgRef}\r\n  graphData={data}\r\n  // linkColor={() => \"White\"}\r\n  nodeAutoColorBy={(d) => d.id % GROUPS}\r\n  //  linkAutoColorBy={() => \"white\"}\r\n  linkOpacity={0.6}\r\n  linkAutoColorBy={(d) => data.nodes[d.source].id % GROUPS}\r\n  linkWidth={0.6}\r\n  //distRatio=\"10:4\"\r\n  // nodeAutoColorBy=\"group\"\r\n  // nodeRelSize={NODE_R}\r\n  autoPauseRedraw={false}\r\n  // linkWidth={(link) => (highlightLinks.has(link) ? 4 : 2)}\r\n  linkDirectionalParticles={4}\r\n  linkDirectionalParticleWidth={(link) =>\r\n    highlightLinks.has(link) ? 1 : 0\r\n  }\r\n  nodeLabel={(node) => {\r\n    if (node.hasOwnProperty(\"Workflow\")) {\r\n      if (node.Name === \"InsuranceGig\") {\r\n        return `_________INSURANCE GIG________ <br/>\r\n\r\n${node.neighbors.map((n) => {\r\nreturn `<br/>Worflow :\r\n ${n.Name}`;\r\n})} \r\n`;\r\n      }\r\n      return `Workflow : ${node.Name} \r\n<br/>\r\nStatus : ${node.Status}\r\n${node.neighbors.map((n) => {\r\nreturn n.hasOwnProperty(\"Buyer\")\r\n ? `<br/>Buyer :\r\n ${n.Buyer}`\r\n : `<br/>Seller :\r\n  ${n.Seller}`;\r\n})} \r\n`;\r\n    } else if (node.hasOwnProperty(\"Buyer\")) {\r\n      return `<br/>This is ${\r\n        node.Buyer\r\n      } , <br/> ${node.WorkflowImplementation.map((n) => {\r\n        return `Buyer of ${n.Name} and status is ${n.Status} <br/>`;\r\n      })}`;\r\n    } else if (node.hasOwnProperty(\"Seller\")) {\r\n      return `<br/>This is ${\r\n        node.Seller\r\n      } , <br/> ${node.WorkflowImplementation.map((n) => {\r\n        return `Seller of ${n.Name} and status is ${n.Status} <br/>`;\r\n      })}`;\r\n    }\r\n  }}\r\n  //nodeLabel ={node  => `<span>${node.id}</span>`}\r\n  nodeCanvasObject={paintRing}\r\n  nodeCanvasObjectMode={(node) =>\r\n    highlightNodes.has(node) ? \"before\" : undefined\r\n  }\r\n  onNodeHover={handleNodeHover}\r\n  onLinkHover={handleLinkHover}\r\n  // linkOpacity={(node) => {\r\n  //   if (node.hasOwnProperty(\"Name\") && node.Name === \"InsuranceGig\") {\r\n  //     return 0;\r\n  //   } else {\r\n  //     return 0;\r\n  //   }\r\n  // }}\r\n\r\n  nodeVal={(node) => {\r\n    if (node.id < 6) {\r\n      if (node.hasOwnProperty(\"Name\")) {\r\n        if (node.Name === \"InsuranceGig\") {\r\n          return 30;\r\n        } else return 5;\r\n      }\r\n    } else {\r\n      return 0.5;\r\n    }\r\n  }}\r\n  linkDirectionalArrowLength={5.5}\r\n  // linkDirectionalArrowRelPos={1}\r\n  //  linkDirectionalParticles={5}\r\n  // linkDirectionalParticleWidth={2}\r\n  linkDirectionalParticleSpeed={(d) => 20 * 0.001}\r\n  linkDirectionalParticleColor=\"red\"\r\n  // nodeThreeObject={(node) => {\r\n  //   if (node.hasOwnProperty(\"Name\") && node.Name === \"InsuranceGig\") {\r\n  //     const imgTexture = new THREE.TextureLoader().load(logo);\r\n  //     const material = new THREE.SpriteMaterial({ map: imgTexture });\r\n  //     const sprite = new THREE.Sprite(material);\r\n  //     sprite.scale.set(30, 30);\r\n\r\n  //     return sprite;\r\n  //   }\r\n  // }}\r\n  onNodeClick={handleNodeClick}\r\n/>\r\n\r\n\r\n        \r\n          {!data.nodes.length && (\r\n            <h2\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"50%\",\r\n                left: \"40%\",\r\n                color: \"white\",\r\n                \r\n              }}\r\n            >\r\n              No Result Found ! Please Reset\r\n            \r\n            </h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {show_sidebar && <SideBar node={singleNodeData} type={workflow_type} />}\r\n    </>\r\n\r\n    //</>//<ForceGraph3d\r\n    // ref={fgRef}\r\n    //       graphData={nodes_data}\r\n    //      // nodeAutoColorBy=\"group\"\r\n    //      className=\"graph\"\r\n    //      backgroundColor={\"rgba(0, 0, 0, 1)\"}\r\n    //       nodeColor={() => \"red\"}\r\n    //       linkColor={() => \"white\"}\r\n    //       nodeThreeObject={node => {\r\n    //         const sprite = new SpriteText(node.id);\r\n    //         sprite.color = node.color || \"red\";\r\n    //         sprite.textHeight = 8;\r\n    //         return sprite;\r\n    //       }}\r\n    //       onNodeClick={handleClick}\r\n    //     />\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport ForceGraph3D from \"react-force-graph-3d\";\nimport App from \"./App\";\nimport NameGraph1 from \"./NameGraph1\";\nimport NameGraph from \"./NameGraph\";\nimport CustomGraph from \"./CustomGraph\";\nimport CustomJsonGraph from \"./CustomJsonGraph\";\nconst rootElement = document.getElementById(\"root\");\nimport leftBar from \"./leftBar\";\nimport LeftBar from \"./leftBar\";\nimport TopBar from \"./topBar\";\nimport SideBar from \"./sideBar\";\n\nReactDOM.render(\n  <StrictMode>\n    <CustomJsonGraph />\n  </StrictMode>,\n  rootElement\n);\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 78;"],"sourceRoot":""}